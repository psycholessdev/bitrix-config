worker_processes auto;

events {
    worker_connections 1024;
}

http {
    server_tokens off;

    server {
        listen 80;
        listen [::]:80;

        server_name ${DOMAIN};

        # redirects all non-SSL traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # SSL server block
    # make sure certificates exist
    server {
        listen 443 ssl;
        listen 443 quic reuseport;
        listen [::]:443 ssl;
        listen [::]:443 quic reuseport;

        http2 on;
        http3 on;
        ssl_early_data on;
        quic_retry on;
        add_header Alt-Svc 'h3=":443"; ma=86400';

        server_name ${DOMAIN};
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

        root /var/www/html;
        index index.php index.html index.htm;

        location / {
            try_files $uri $uri/ =404;
        }


        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php-fpm:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        # Optional: Deny access to .htaccess files for security
        location ~ /\.ht {
            deny all;
        }
    }

    server {
        listen 443 ssl;
        listen 443 quic;
        listen [::]:443 ssl;
        listen [::]:443 quic;

        add_header Alt-Svc 'h3=":443"; ma=86400';

        server_name ${BITRIX_DOMAIN};
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/letsencrypt/live/${BITRIX_DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${BITRIX_DOMAIN}/privkey.pem;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_x_real_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cache-Control no-cache;
            proxy_set_header X-Request-ID $request_id;

            proxy_pass http://nginx:8588;
        }
    }
}
